name: Deploy to Server

on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"  # Игнорирует изменения во всех Markdown файлах (например, README.md, CONTRIBUTING.md и т.д.)
      - ".github/**"
      - "*.gitignore"
      - ".scripts/**"
  # workflow_dispatch:  # Запуск вручную из GitHub Actions

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Разрешаем запись в репозиторий

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"


      - name: Pull Repo
        id: pull_repo
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            # Отменить все локальные изменения внутри этой папки (вернуть на состояние последнего коммита)
            # git restore grafana/dashboards/ 
            git pull origin main

      - name: Backup current images before deployment
        id: backup_images
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            docker compose images > /root/backup_images.txt
      
      # - name: Docker Compose Pull
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       cd /root/ChatGPT_Telegram_Bot
      #       docker compose pull

      - name: Containers Build
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            docker compose build  # Пересобирает контейнеры

      - name: Containers up
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            docker compose up -d  # Запускает контейнеры без остановки

      - name: Prune unused images and volumes
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker image prune -f
            docker volume prune -f
            
      # # Откат контейнеров, если деплой провалился
      # - name: Rollback on failure
      #   if: failure() && steps.backup_images.outcome == 'success'
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       echo "Rolling back to previous version..."
      #       cd /root/ChatGPT_Telegram_Bot
      #       docker compose down
      #       docker compose pull $(cat /root/backup_images.txt | awk '{print $2}')
      #       docker compose up -d
      
      
      # # Шаг отката изменений в случае неудачного деплоя
      # - name: Revert commit if deploy failed
      #   if: failure() && steps.pull_repo.outcome == 'success'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Подключаем токен
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       cd /root/ChatGPT_Telegram_Bot
      #       git checkout main
      #       git revert -m 1 --no-edit HEAD  # Откатывает последний коммит
      #       # Пушим изменения обратно в main
      #       git push origin main
      
