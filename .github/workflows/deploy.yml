name: Deploy to Server

on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"  # Игнорирует изменения во всех Markdown файлах (например, README.md, CONTRIBUTING.md и т.д.)
      - ".github/**"
      - "*.gitignore"
  # workflow_dispatch:  # Запуск вручную из GitHub Actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Pull latest changes
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            git pull origin main
      
      - name: Docker Compose Pull
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            docker compose pull

      - name: Start containers with build
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ChatGPT_Telegram_Bot
            docker compose up --build -d  # Пересобирает и запускает контейнеры без остановки

      - name: Prune unused images and volumes
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker image prune -f
            docker volume prune -f
            
      # Шаг отката изменений в случае неудачного деплоя
      - name: Revert commit if deploy failed
        if: failure()
        run: |
          git checkout main
          git revert --no-edit HEAD  # Откатывает последний коммит
          git push origin main  # Пушим изменения обратно в main
