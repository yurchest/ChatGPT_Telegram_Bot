from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.enums import ParseMode

from src.logger import logger

from src.database import Redis
from src.aiogram.middlewares.middlewares import WaitingMiddleware, CheckNewUserMiddleware
from src.config import TRIAL_PERIOD_NUM_REQ


router = Router()

router.message.middleware(CheckNewUserMiddleware())
router.message.middleware(WaitingMiddleware())

@router.message(CommandStart())
async def start_handler(message: Message) -> None:
    await message.answer("–ú–æ–∂–µ—à—å –∑–∞–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å")

@router.message(Command('reset_conversation'))
async def reset_handler(message: Message, redis: Redis):
    await redis.clear_user_history(message.from_user.id)
    await redis.set_user_req_inactive(message.from_user.id)
    await message.answer("–î–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω")


@router.message(Command('show_dialog'))
async def reset_handler(message: Message, redis: Redis):
    history = await redis.get_history(message.from_user.id)
    if not history:
        await message.answer("–î–∏–∞–ª–æ–≥ –ø—É—Å—Ç")
        return
    for cur_message in history:
        sender = "–ù–µ–∏–∑–≤–µ—Ç–Ω–æ –∫—Ç–æ"
        if cur_message["role"] == "user":
            sender = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        elif cur_message["role"] == "assistant":
            sender = "–ë–æ—Ç"
        await message.answer(f"{sender}:\n{'-' * 30}\n{cur_message['content']}\n{'-' * 30}")

@router.message(Command('help'))
async def reset_handler(message: Message, redis: Redis):
    help_text = (
        "ü§ñ –≠—Ç–æ—Ç —á–∞—Ç\\-–±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å OpenAI API\\.\n"
        "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @yurchest\n\n"
        "üîπ *–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:* \n"    
        "    ‚¶Å –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥\n      */reset\\_conversation*  \n"
        "    ‚¶Å –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n      */pay* \n"
        "    ‚¶Å –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Å—å –¥–∏–∞–ª–æ–≥\n      */show\\_dialog* \n"
        "    ‚¶Å –ü–æ–º–æ—â—å\n      */help*  \n\n"
        "–ù–∞—á–Ω–µ–º? üòäüöÄ"
    )
    await message.answer(help_text, parse_mode=ParseMode.MARKDOWN_V2)
